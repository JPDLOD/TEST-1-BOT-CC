# -*- coding: utf-8 -*-
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from config import TARGET_CHAT_ID, BACKUP_CHAT_ID, PREVIEW_CHAT_ID
from publisher import is_active_backup

def kb_main() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üìã Listar", callback_data="m:list"),
             InlineKeyboardButton("üì¶ Enviar", callback_data="m:send")],
            [InlineKeyboardButton("üß™ Preview", callback_data="m:preview"),
             InlineKeyboardButton("‚è∞ Programar", callback_data="m:sched")],
            [InlineKeyboardButton("‚öôÔ∏è Ajustes", callback_data="m:settings")]
        ]
    )

def text_main() -> str:
    """Texto completo y detallado de ayuda - NO RESUMIR NI ABREVIAR."""
    return (
        "üõ†Ô∏è **Comandos Principales:**\n"
        
        "**GESTI√ìN DE BORRADORES:**\n"
        "‚Ä¢ `/listar` ‚Äî muestra **borradores pendientes** (excluye programados) con su posici√≥n e `id` para identificar cada mensaje. Tambi√©n muestra programaciones pendientes con fecha, hora y cantidad de mensajes.\n"
        "‚Ä¢ `/cancelar <id>` ‚Äî (o responde al mensaje con `/cancelar`) saca **de la cola** un borrador espec√≠fico sin borrarlo del canal BORRADOR. Solo lo marca como 'no enviar'.\n"
        "‚Ä¢ `/deshacer [id]` ‚Äî revierte el √∫ltimo `/cancelar` realizado (o el id espec√≠fico indicado). Restaura el borrador a la cola para ser enviado. No funciona con `/eliminar`.\n"
        "‚Ä¢ `/eliminar <id>` ‚Äî (o responde al mensaje) **borra definitivamente** el mensaje del canal BORRADOR y lo quita de la cola. Aliases: `/del`, `/delete`, `/remove`, `/borrar`.\n"
        "‚Ä¢ `/nuke <par√°metro>` ‚Äî borrado masivo con m√∫ltiples opciones:\n"
        "  - `/nuke all` o `/nuke todos` ‚Äî elimina **todos** los borradores pendientes\n"
        "  - `/nuke 1,3,5` ‚Äî elimina las posiciones espec√≠ficas del listado\n"
        "  - `/nuke 2-7` ‚Äî elimina un **rango** de posiciones consecutivas\n"
        "  - `/nuke N` ‚Äî elimina los **√∫ltimos N** borradores pendientes\n"
        
        "**ENV√çO Y PUBLICACI√ìN:**\n"
        "‚Ä¢ `/enviar` ‚Äî publica **inmediatamente** todos los borradores pendientes (no programados) a los targets activos: canal PRINCIPAL siempre, y canal BACKUP si est√° activado. Reporta estad√≠sticas detalladas.\n"
        "‚Ä¢ `/preview` ‚Äî env√≠a toda la cola de borradores al canal PREVIEW para **revisar antes de publicar** sin marcarlos como enviados. √ötil para verificaci√≥n.\n"
        
        "**PROGRAMACI√ìN TEMPORAL:**\n"
        "‚Ä¢ `/programar YYYY-MM-DD HH:MM` ‚Äî programa el env√≠o de **los borradores actuales** para fecha y hora espec√≠fica (formato 24 horas: 00:00‚Äì23:59, sin AM/PM ni sufijos). Los mensajes programados quedan bloqueados y no se incluyen en `/enviar` ni `/preview` hasta ejecutarse.\n"
        "‚Ä¢ `/programados` ‚Äî muestra **todas las programaciones pendientes** con ID de programaci√≥n (#pid), fecha/hora exacta con zona horaria, tiempo restante estimado y cantidad de mensajes a enviar.\n"
        "‚Ä¢ `/desprogramar <id|all>` ‚Äî cancela una programaci√≥n espec√≠fica por su #pid o **todas** las programaciones pendientes con 'all'. Libera los mensajes bloqueados.\n"
        
        "**CONFIGURACI√ìN DE DESTINOS:**\n"
        "‚Ä¢ `/canales` ‚Äî muestra los IDs de todos los canales configurados y el **estado actual** de cada target: PRINCIPAL (siempre ON), BACKUP (ON/OFF configurable), PREVIEW.\n"
        "‚Ä¢ `/backup on|off` ‚Äî activa o desactiva **√∫nicamente** el canal BACKUP. El canal PRINCIPAL siempre permanece activo. Muestra el panel de configuraci√≥n actualizado.\n"
        
        "**HERRAMIENTAS ADICIONALES:**\n"
        "‚Ä¢ `/id [id]` ‚Äî si respondes a un mensaje muestra su ID; con par√°metro num√©rico genera el **enlace directo** t.me/c/... para acceso r√°pido al mensaje.\n"
        "‚Ä¢ **Atajo `@@@ T√çTULO | URL`** ‚Äî si escribes una l√≠nea con este formato en el canal BORRADOR, esa l√≠nea se borra autom√°ticamente y se agrega un **bot√≥n inline** con ese T√çTULO que enlaza a la URL al √∫ltimo borrador pendiente. El resto del mensaje permanece intacto.\n"
        
        "**INFORMACI√ìN Y AYUDA:**\n"
        "‚Ä¢ `/comandos` ‚Äî muestra este panel completo de ayuda con todos los botones de acceso r√°pido.\n"
        
        "**NOTAS IMPORTANTES:**\n"
        "- Los mensajes **programados** quedan bloqueados y no aparecen en `/listar` ni se incluyen en `/enviar` o `/preview` hasta que se ejecute la programaci√≥n.\n"
        "- Las **encuestas tipo quiz** mantienen autom√°ticamente su respuesta correcta original (no se fuerza a opci√≥n A).\n"
        "- Los **botones inline** creados con `@@@` no tienen vista previa nativa; si necesitas preview del enlace, agr√©galo como l√≠nea separada adem√°s del bot√≥n.\n"
        "- El sistema mantiene **estad√≠sticas acumuladas** de cancelados/eliminados que se reportan en cada env√≠o y se limpian despu√©s.\n"
        
        "\nPulsa un bot√≥n de acceso r√°pido o usa `/comandos` para volver a ver este panel."
    )

def kb_settings() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üîÄ Backup ON/OFF", callback_data="m:toggle_backup")],
            [InlineKeyboardButton("‚¨ÖÔ∏è Volver", callback_data="m:back")]
        ]
    )

def text_settings() -> str:
    onoff = "ON" if is_active_backup() else "OFF"
    return (
        f"üì° **Configuraci√≥n de Canales Target**\n\n"
        f"‚Ä¢ **Principal**: `{TARGET_CHAT_ID}` ‚Äî **ON** (siempre activo, no se puede desactivar)\n"
        f"‚Ä¢ **Backup**: `{BACKUP_CHAT_ID}` ‚Äî **{onoff}** (configurable con el bot√≥n)\n"
        f"‚Ä¢ **Preview**: `{PREVIEW_CHAT_ID}` ‚Äî (solo para `/preview`, no se incluye en env√≠os normales)\n\n"
        f"**Estado actual:** Los env√≠os van a **Principal** {'+ **Backup**' if onoff == 'ON' else '(solo)'}\n\n"
        "Usa el bot√≥n **üîÄ Backup ON/OFF** para alternar el estado del canal backup.\n"
        "‚¨ÖÔ∏è **Volver** regresa al men√∫ principal con todos los comandos."
    )

def kb_schedule() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("‚è≥ +5 min", callback_data="s:+5"),
             InlineKeyboardButton("‚è≥ +15 min", callback_data="s:+15")],
            [InlineKeyboardButton("üïó Hoy 20:00", callback_data="s:today20"),
             InlineKeyboardButton("üåÖ Ma√±ana 07:00", callback_data="s:tom07")],
            [InlineKeyboardButton("üóí Ver programados", callback_data="s:list"),
             InlineKeyboardButton("‚ùå Cancelar todos", callback_data="s:clear")],
            [InlineKeyboardButton("‚úçÔ∏è Custom", callback_data="s:custom"),
             InlineKeyboardButton("‚¨ÖÔ∏è Volver", callback_data="m:back")]
        ]
    )

def text_schedule() -> str:
    return (
        "‚è∞ **Programar Env√≠o Temporal**\n\n"
        "Programa el env√≠o de **los borradores actuales** para una fecha y hora espec√≠fica.\n\n"
        "**Opciones r√°pidas:** Usa los botones de abajo para programaciones comunes.\n\n"
        "**Programaci√≥n manual:** `/programar YYYY-MM-DD HH:MM`\n"
        "‚Ä¢ Formato 24 horas: 00:00 a 23:59\n"
        "‚Ä¢ Sin sufijos AM/PM ni '(24h)'\n"
        "‚Ä¢ Ejemplo: `/programar 2025-08-27 14:30`\n\n"
        "‚ö†Ô∏è **Importante:** Si no hay borradores pendientes, no se programa nada.\n"
        "Los mensajes programados quedan **bloqueados** hasta su ejecuci√≥n."
    )
